// src/frontend/src/pages/staff/QuanLyNhanMau.jsx
import React, { useState, useEffect } from 'react';
import NhanMauThuong from '../components/NhanMauThuong';
import NhanMauKhanCap from '../components/NhanMauKhanCap';
import LichSuThucHien from '../components/LichSuThucHien';
import './QuanLyNhanMau.css';

function hasPermission(requiredType) {
    const allowed = JSON.parse(localStorage.getItem('allowedTaskTypes') || '[]');
    if (requiredType === 'QuanLyNhanMau') {
        return allowed.includes('donation_management');
    }
    return allowed.includes(requiredType);
}

// Component hi·ªÉn th·ªã th√¥ng b√°o kh√¥ng c√≥ quy·ªÅn
function NoPermissionMessage() {
    return (
        <div style={{
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
            height: '60vh',
            textAlign: 'center',
            padding: '20px'
        }}>
            <div style={{
                fontSize: '64px',
                marginBottom: '20px'
            }}>üö´</div>
            <h2 style={{
                color: '#dc3545',
                marginBottom: '10px'
            }}>Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p</h2>
            <p style={{
                color: '#666',
                fontSize: '16px',
                maxWidth: '500px',
                lineHeight: '1.6'
            }}>
                B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p trang qu·∫£n l√Ω nh·∫≠n m√°u. 
                Trang n√†y ch·ªâ d√†nh cho nh√¢n vi√™n ƒë∆∞·ª£c ph√¢n c√¥ng c√¥ng vi·ªác qu·∫£n l√Ω nh·∫≠n m√°u v√† ph√¢n ph·ªëi m√°u.
            </p>
            <p style={{
                color: '#888',
                fontSize: '14px',
                marginTop: '20px'
            }}>
                Vui l√≤ng li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ ƒë∆∞·ª£c c·∫•p quy·ªÅn truy c·∫≠p.
            </p>
        </div>
    );
}

function QuanLyNhanMau() {
    const [tab, setTab] = useState('thuong');
    const [recipients, setRecipients] = useState([]);
    const [historyRecipients, setHistoryRecipients] = useState([]);
    const [loading, setLoading] = useState(true);
    const [historyLoading, setHistoryLoading] = useState(false);

    // Check permission - if no permission, show message
    if (!hasPermission('QuanLyNhanMau')) {
        return <NoPermissionMessage />;
    }

    useEffect(() => {
        // Ch·ªâ l·∫•y recipients c√≥ status 'requested' v√† 'agree' cho tab th∆∞·ªùng
        fetch('http://localhost:3001/api/recipients/')
            .then(res => res.json())
            .then(data => {
                const activeRecipients = data.filter(r => 
                    r.receive_status === 'requested' || r.receive_status === 'agree'
                );
                setRecipients(activeRecipients);
                setLoading(false);
            })
            .catch(() => {
                setRecipients([]);
                setLoading(false);
            });
    }, []);

    // Function ƒë·ªÉ load l·ªãch s·ª≠
    const loadHistory = async () => {
        setHistoryLoading(true);
        try {
            const res = await fetch('http://localhost:3001/api/recipients/');
            const data = await res.json();
            const historyData = data.filter(r => 
                r.receive_status === 'received' || r.receive_status === 'cancelled'
            );
            setHistoryRecipients(historyData);
        } catch (error) {
            console.error('Error loading history:', error);
            setHistoryRecipients([]);
        } finally {
            setHistoryLoading(false);
        }
    };

    // Load history khi chuy·ªÉn sang tab l·ªãch s·ª≠
    useEffect(() => {
        if (tab === 'lichsu') {
            loadHistory();
        }
    }, [tab]);

    // Function ƒë·ªÉ refresh danh s√°ch recipients
    const refreshRecipients = () => {
        setLoading(true);
        fetch('http://localhost:3001/api/recipients/')
            .then(res => res.json())
            .then(data => {
                const activeRecipients = data.filter(r => 
                    r.receive_status === 'requested' || r.receive_status === 'agree'
                );
                setRecipients(activeRecipients);
                setLoading(false);
            })
            .catch(() => {
                setRecipients([]);
                setLoading(false);
            });
    };

    return (
        <div className="quan-ly-nhan-mau">
            <div className="tab-container">
                <button
                    onClick={() => setTab('thuong')}
                    className={`tab-button ${tab === 'thuong' ? 'active' : 'inactive'}`}
                >
                    Nh·∫≠n m√°u th∆∞·ªùng
                </button>
                <button
                    onClick={() => setTab('khancap')}
                    className={`tab-button ${tab === 'khancap' ? 'active' : 'inactive'}`}
                >
                    Nh·∫≠n m√°u kh·∫©n c·∫•p
                </button>
                <button
                    onClick={() => setTab('lichsu')}
                    className={`tab-button ${tab === 'lichsu' ? 'active' : 'inactive'}`}
                >
                    L·ªãch s·ª≠ th·ª±c hi·ªán
                </button>
            </div>
            <div className="tab-content">
                {tab === 'thuong' && (
                    <NhanMauThuong recipients={recipients} loading={loading} onRefresh={refreshRecipients} />
                )}
                {tab === 'khancap' && (
                    <NhanMauKhanCap />
                )}
                {tab === 'lichsu' && (
                    <LichSuThucHien recipients={historyRecipients} loading={historyLoading} />
                )}
            </div>
        </div>
    );
}

export default QuanLyNhanMau;