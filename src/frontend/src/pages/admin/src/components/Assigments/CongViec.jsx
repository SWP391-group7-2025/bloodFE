import React, { useState } from "react";
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import styles from "../../styles/Assignment.module.css";

const sampleTasks = [
    { id: 1, role: "Nh√¢n vi√™n qu·∫£n l√Ω kho m√°u", task: "Kh√°m s·ª©c kh·ªèe, qu·∫£n l√Ω kho m√°u" },
    { id: 2, role: "Nh√¢n vi√™n l·∫•y m√°u", task: "L·∫•y m√°u" },
    { id: 3, role: "Nh√¢n vi√™n ti·∫øp t·∫ø m√°u", task: "H·ªó tr·ª£ cho ng∆∞·ªùi nh·∫≠n m√°u" },
];

const CongViec = ({ jobs, setJobs }) => {
    const [tasks, setTasks] = useState(sampleTasks);

    // Th√™m h√†m x·ª≠ l√Ω x√≥a
    const handleDelete = (id) => {
        // S·ª≠ d·ª•ng confirm v·ªõi toastify (t·∫°m th·ªùi d√πng window.confirm, toast sau khi x√≥a)
        if (window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a c√¥ng vi·ªác n√†y?")) {
            setTasks(prev => {
                const newTasks = prev.filter((item) => item.id !== id);
                toast.success("ƒê√£ x√≥a c√¥ng vi·ªác!");
                return newTasks;
            });
            setJobs(prev => prev.filter((item) => item.id !== id));
        }
    };

    return (
        <div className={styles.taskContainer}>
            <ToastContainer position="top-right" autoClose={2500} hideProgressBar={false} newestOnTop closeOnClick pauseOnFocusLoss draggable pauseOnHover />
            <div className={styles.sectionHeader}>
                <div className={styles.sectionTitle}>
                    <div className={styles.titleIcon}>‚ö°</div>
                    Qu·∫£n L√Ω C√¥ng Vi·ªác
                </div>
            </div>

            <div className={styles.quickStats}>
                <div className={styles.statCard}>
                    <div className={styles.statHeader}>
                        <div className={styles.statLabel}>T·ªïng c√¥ng vi·ªác</div>
                    </div>
                    <div className={styles.statValue}>{tasks.length}</div>
                </div>
            </div>

            {tasks.length === 0 ? (
                <div className={styles.emptyState}>
                    <div className={styles.emptyIcon}>üìã</div>
                    <div className={styles.emptyTitle}>Ch∆∞a c√≥ c√¥ng vi·ªác n√†o</div>
                    <div className={styles.emptyDescription}>H√£y th√™m c√¥ng vi·ªác ƒë·∫ßu ti√™n ƒë·ªÉ b·∫Øt ƒë·∫ßu qu·∫£n l√Ω</div>
                </div>
            ) : (
                <div className={styles.taskGrid}>
                    {tasks.map((item) => (
                        <div key={item.id} className={styles.taskCard}>
                            <div className={styles.taskHeader}>
                                <div className={styles.taskRole}>
                                    <div className={styles.taskRoleTitle}>
                                        <span className={styles.taskRoleIcon}>üë§</span>
                                        {item.role}
                                    </div>
                                    <div className={styles.taskRoleId}>ID: {item.id}</div>
                                </div>
                            </div>

                            <div className={styles.taskDescription}>
                                <div className={styles.taskDescriptionTitle}>
                                    üìù M√¥ t·∫£ c√¥ng vi·ªác
                                </div>
                                <div className={styles.taskDescriptionText}>
                                    {item.task}
                                </div>
                            </div>

                            <div className={styles.taskMeta}>
                                <div className={styles.taskMetaItem}>
                                    <span className={styles.taskMetaIcon}>üìÖ</span>
                                    ƒê∆∞·ª£c t·∫°o h√¥m nay
                                </div>
                                <div className={styles.taskMetaItem}>
                                    <span className={styles.taskMetaIcon}>‚è∞</span>
                                    ƒêang ho·∫°t ƒë·ªông
                                </div>
                            </div>

                            <div className={styles.taskActions}>
                                <button
                                    className={`${styles.actionButton} ${styles.editButton}`}
                                    onClick={() => {/* Add edit functionality */ }}
                                >
                                    ‚úèÔ∏è S·ª≠a
                                </button>
                                <button
                                    className={`${styles.actionButton} ${styles.deleteButton}`}
                                    onClick={() => handleDelete(item.id)}
                                >
                                    üóëÔ∏è X√≥a
                                </button>
                            </div>
                        </div>
                    ))}
                </div>
            )}
        </div>
    );
};

export default CongViec;